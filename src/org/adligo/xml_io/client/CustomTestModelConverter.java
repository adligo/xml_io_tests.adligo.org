package org.adligo.xml_io.client;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;

import org.adligo.models.params.client.I_XMLBuilder;
import org.adligo.models.params.client.TagInfo;
import org.adligo.xml_io.client.converters.Tags;

/**
 * this kind of code will be autogenerated,
 * it is just a simple example
 * 
 * @author scott
 *
 */
public class CustomTestModelConverter implements I_Converter<CustomTestModel> {
	private static final String TAG_NAME = "ctm";
	
	@Override
	public ObjectFromXml<CustomTestModel> fromXml(String xml, TagInfo info,
			Xml_IOReaderContext context) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void toXml(CustomTestModel p, Xml_IOWriterContext context) {
		I_XMLBuilder builder = context.getBuilder();
		builder.appendTagHeaderStart(TAG_NAME);
		
		String name = context.getNextTagNameAttribute();
		if (name != null) {
			builder.appendAttribute(Tags.NAME_ATTRIBUTE, name);
			context.setNextTagNameAttribute(null);
		}
		
		context.writeXmlAttribute("a", p.getA());
		context.writeXmlAttribute("b", p.getB());
		
		builder.appendTagHeaderEndNoChildren();
		
	}

	
	public static void setUp(Xml_IOSettings settings) {
		Map<String, I_Converter<?>> fromXml = new HashMap<String, I_Converter<?>>();
		fromXml.put(TAG_NAME, new CustomTestModelConverter());
		settings.addFromXmlConverters(fromXml);
		
		Map<Class<?>, I_Converter<?>> toXml = new HashMap<Class<?>, I_Converter<?>>();
		toXml.put(CustomTestModel.class, new CustomTestModelConverter());
		settings.addToXmlConverters(toXml);
	}
}
